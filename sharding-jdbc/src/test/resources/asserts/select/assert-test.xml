<asserts sharding-rule-types="db,tbl,dbtbl,masterslave">
    <dql-assert id="assertSelectOne" sql="assertSelectOne" expected-data-file="SelectOne.xml" />
    <dql-assert id="assertSelectNotEqualsWithSingleTable" sql="assertSelectNotEqualsWithSingleTable" sharding-rule-types="tbl" expected-data-file="SelectNotEqualsWithSingleTable.xml">
        <parameter>
            <value value="100000" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectNotEqualsWithSingleTableForExclamationEqual" sql="assertSelectNotEqualsWithSingleTableForExclamationEqual" sharding-rule-types="tbl" expected-data-file="SelectNotEqualsWithSingleTable.xml">
        <parameter>
            <value value="100000" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectNotEqualsWithSingleTableForNotIn" sql="assertSelectNotEqualsWithSingleTableForNotIn" sharding-rule-types="tbl" expected-data-file="SelectNotWithSingleTable.xml">
        <parameter>
            <value value="100000,100001" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectNotEqualsWithSingleTableForNotBetween" sql="assertSelectNotEqualsWithSingleTableForNotBetween" sharding-rule-types="tbl" expected-data-file="SelectNotWithSingleTable.xml">
        <parameter>
            <value value="100000,100001" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectEqualsWithSameShardingColumns" sql="assertSelectEqualsWithSameShardingColumns" sharding-rule-types="tbl" expected-data-file="SelectEqualsWithSameShardingColumns.xml">
        <parameter>
            <value value="1000" type="int"/>
            <value value="1001" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectInWithSameShardingColumns" sql="assertSelectInWithSameShardingColumns" sharding-rule-types="tbl" expected-data-file="SelectInWithSameShardingColumns.xml">
        <parameter>
            <value value="1000" type="int"/>
            <value value="1001" type="int"/>
            <value value="1001" type="int"/>
            <value value="1100" type="int"/>
        </parameter>
    </dql-assert>
    <dql-assert id="assertSelectEqualsWithSingleTable" sql="assertSelectEqualsWithSingleTable" sharding-rule-types="tbl,db,masterslave,dbtbl" expected-data-file="SelectEqualsWithSingleTable_1.xml">
        <subAssert expected-data-file="SelectEqualsWithSingleTable_0.xml" sharding-rule-types="tbl">
            <parameter>
                <value value="10" type="int"/>
                <value value="1000" type="int"/>
            </parameter>
        </subAssert>
        <subAssert expected-data-file="SelectEqualsWithSingleTable_1.xml" sharding-rule-types="tbl">
            <parameter>
                <value value="11" type="int"/>
                <value value="1109" type="int"/>
            </parameter>
        </subAssert>
        <subAssert expected-data-file="SelectEqualsWithSingleTable_2.xml" sharding-rule-types="db,masterslave,dbtbl">
            <parameter>
                <value value="12" type="int"/>
                <value value="1201" type="int"/>
            </parameter>
        </subAssert>
        <subAssert expected-data-file="Empty.xml">
            <parameter>
                <value value="12" type="int"/>
                <value value="1000" type="int"/>
            </parameter>
        </subAssert>
    </dql-assert>

    <!--<dql-assert id="assertSelectBetweenWithSingleTable" sql="assertSelectBetweenWithSingleTable" sharding-rule-types="tbl,db,dbtbl">
        <subAssert expected-data-file="SelectBetweenWithSingleTable.xml" sharding-rule-types="tbl,dbtbl">
            <parameter>
                <value value="10" type="int"/>
                <value value="12" type="int"/>
                <value value="1009" type="int"/>
                <value value="1108" type="int"/>
            </parameter>
        </subAssert>
        <subAssert expected-data-file="SelectBetweenWithSingleTable.xml" sharding-rule-types="db">
            <parameter>
                <value value="10" type="int"/>
                <value value="12" type="int"/>
                <value value="1001" type="int"/>
                <value value="1200" type="int"/>
            </parameter>
        </subAssert>
        <subAssert expected-data-file="Empty.xml">
            <parameter>
                <value value="10" type="int"/>
                <value value="12" type="int"/>
                <value value="1309" type="int"/>
                <value value="1408" type="int"/>
            </parameter>
        </subAssert>
    </dql-assert>-->
</asserts>
